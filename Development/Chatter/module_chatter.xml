<?xml version="1.0" encoding="UTF-8"?>
<project name="module_chatter" default="compile.module.chatter">
  <dirname property="module.chatter.basedir" file="${ant.file.module_chatter}"/>
  
  <property name="module.jdk.home.chatter" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.chatter" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.chatter" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.chatter" value="-encoding UTF-8 -source 8 -target 1.8 ${compiler.args}"/>
  
  <property name="chatter.output.dir" value="${module.chatter.basedir}/target/classes"/>
  <property name="chatter.testoutput.dir" value="${module.chatter.basedir}/target/test-classes"/>
  
  <path id="chatter.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="chatter.module.production.classpath">
    <path refid="${module.jdk.classpath.chatter}"/>
  </path>
  
  <path id="chatter.runtime.production.module.classpath">
    <pathelement location="${chatter.output.dir}"/>
  </path>
  
  <path id="chatter.module.classpath">
    <path refid="${module.jdk.classpath.chatter}"/>
    <pathelement location="${chatter.output.dir}"/>
    <path refid="library.maven:_org.junit.jupiter:junit-jupiter-engine:5.3.1.classpath"/>
    <path refid="library.maven:_org.apiguardian:apiguardian-api:1.0.0.classpath"/>
    <path refid="library.maven:_org.junit.platform:junit-platform-engine:1.3.1.classpath"/>
    <path refid="library.maven:_org.junit.platform:junit-platform-commons:1.3.1.classpath"/>
    <path refid="library.maven:_org.opentest4j:opentest4j:1.1.1.classpath"/>
    <path refid="library.maven:_org.junit.jupiter:junit-jupiter-api:5.3.1.classpath"/>
    <path refid="library.maven:_org.mockito:mockito-all:1.9.5.classpath"/>
    <path refid="library.maven:_antlr:antlr:2.7.7.classpath"/>
    <path refid="library.maven:_junit:junit:4.12.classpath"/>
    <path refid="library.maven:_org.hamcrest:hamcrest-core:1.3.classpath"/>
  </path>
  
  <path id="chatter.runtime.module.classpath">
    <pathelement location="${chatter.testoutput.dir}"/>
    <pathelement location="${chatter.output.dir}"/>
    <path refid="library.maven:_org.junit.jupiter:junit-jupiter-engine:5.3.1.classpath"/>
    <path refid="library.maven:_org.apiguardian:apiguardian-api:1.0.0.classpath"/>
    <path refid="library.maven:_org.junit.platform:junit-platform-engine:1.3.1.classpath"/>
    <path refid="library.maven:_org.junit.platform:junit-platform-commons:1.3.1.classpath"/>
    <path refid="library.maven:_org.opentest4j:opentest4j:1.1.1.classpath"/>
    <path refid="library.maven:_org.junit.jupiter:junit-jupiter-api:5.3.1.classpath"/>
    <path refid="library.maven:_org.mockito:mockito-all:1.9.5.classpath"/>
    <path refid="library.maven:_antlr:antlr:2.7.7.classpath"/>
    <path refid="library.maven:_junit:junit:4.12.classpath"/>
    <path refid="library.maven:_org.hamcrest:hamcrest-core:1.3.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.chatter">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.chatter">
    <patternset refid="excluded.from.module.chatter"/>
  </patternset>
  
  <path id="chatter.module.sourcepath">
    <dirset dir="${module.chatter.basedir}">
      <include name="src/main/java"/>
    </dirset>
  </path>
  
  <path id="chatter.module.test.sourcepath">
    <dirset dir="${module.chatter.basedir}">
      <include name="src/test"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.chatter" depends="compile.module.chatter.production,compile.module.chatter.tests" description="Compile module Chatter"/>
  
  <target name="compile.module.chatter.production" depends="register.custom.compilers" description="Compile module Chatter; production classes">
    <mkdir dir="${chatter.output.dir}"/>
    <javac2 destdir="${chatter.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.chatter}/javac">
      <compilerarg line="${compiler.args.chatter}"/>
      <bootclasspath refid="chatter.module.bootclasspath"/>
      <classpath refid="chatter.module.production.classpath"/>
      <src refid="chatter.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.chatter"/>
    </javac2>
    
    <copy todir="${chatter.output.dir}">
      <fileset dir="${module.chatter.basedir}/src/main/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.chatter.tests" depends="register.custom.compilers,compile.module.chatter.production" description="compile module Chatter; test classes" unless="skip.tests">
    <mkdir dir="${chatter.testoutput.dir}"/>
    <javac2 destdir="${chatter.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.chatter}/javac">
      <compilerarg line="${compiler.args.chatter}"/>
      <bootclasspath refid="chatter.module.bootclasspath"/>
      <classpath refid="chatter.module.classpath"/>
      <src refid="chatter.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.chatter"/>
    </javac2>
    
    <copy todir="${chatter.testoutput.dir}">
      <fileset dir="${module.chatter.basedir}/src/test">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.chatter" description="cleanup module">
    <delete dir="${chatter.output.dir}"/>
    <delete dir="${chatter.testoutput.dir}"/>
  </target>
</project>